{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 Consolas-Bold;
}
{\colortbl;\red255\green255\blue255;\red14\green114\blue164;\red244\green244\blue244;\red38\green38\blue38;
\red14\green110\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c52549\c70196;\cssrgb\c96471\c96471\c96471;\cssrgb\c20000\c20000\c20000;
\cssrgb\c0\c50196\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
import\cf4 \cb3  matplotlib.pyplot as plt\
from mpl_toolkits.basemap \cf2 \cb3 import\cf4 \cb3  Basemap\
from matplotlib.patches \cf2 \cb3 import\cf4 \cb3  Polygon\
from matplotlib.colors \cf2 \cb3 import\cf4 \cb3  rgb2hex\
\
plt.figure(figsize=(16,8))\
m = Basemap(\
    llcrnrlon=77,\
    llcrnrlat=14,\
    urcrnrlon=140,\
    urcrnrlat=51,\
    projection='lcc',\
    lat_1=33,\
    lat_2=45,\
    lon_0=100\
)\
m.drawcountries(linewidth=1.5)\
m.drawcoastlines()\
\
m.readshapefile('CHN_adm_shp/CHN_adm1', 'states', drawbounds=True)\
\
df = pd.read_csv('chnpop.csv')\
df['
\f1 \'ca\'a1\'c3\'fb
\f0 '] = df.
\f1 \'b5\'d8\'c7\'f8
\f0 .str[:\cf5 2\cf4 ]\
df.set_index('
\f1 \'ca\'a1\'c3\'fb
\f0 ', inplace=True)\
\
statenames=[]\
colors=\{\}\
cmap = plt.cm.YlOrRd\
vmax = \cf5 100000000\cf4 \
vmin = \cf5 3000000\cf4 \
for shapedict 
\f2\b \cf4 \cb3 in
\f0\b0 \cf4 \cb3  m.states_info:\
    statename = shapedict['NL_NAME_1']\
    p = statename.split('|')\
    
\f2\b \cf4 \cb3 if
\f0\b0 \cf4 \cb3  len(p) > \cf5 1\cf4 :\
        s = p[\cf5 1\cf4 ]\
    
\f2\b \cf4 \cb3 else
\f0\b0 \cf4 \cb3 :\
        s = p[\cf5 0\cf4 ]\
    s = s[:\cf5 2\cf4 ]\
    
\f2\b \cf4 \cb3 if
\f0\b0 \cf4 \cb3  s == '
\f1 \'ba\'da\'fd\'88
\f0 ':\
        s = '
\f1 \'ba\'da\'c1\'fa
\f0 '\
    statenames.append(s)\
    pop = df['
\f1 \'c8\'cb\'bf\'da\'ca\'fd
\f0 '][s]\
    colors[s] = cmap(np.sqrt((pop - vmin) / (vmax - vmin)))[:\cf5 3\cf4 ]\
\
ax = plt.gca()\
for nshape, seg 
\f2\b \cf4 \cb3 in
\f0\b0 \cf4 \cb3  enumerate(m.states):\
    color = rgb2hex(colors[statenames[nshape]])\
    poly = Polygon(seg, facecolor=color, edgecolor=color)\
    ax.add_patch(poly)\
\
plt.show()}